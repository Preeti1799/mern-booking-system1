{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nconst BASE_URL = \"http://localhost:8800\"; // Hardcode for now to test\n\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(\"✅ Full API URL:\", `${BASE_URL}${url}`);\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(`${BASE_URL}${url}`, {\n        withCredentials: true\n      });\n      setData(res.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || \"An error occurred\");\n    } finally {\n      setLoading(false);\n    }\n  }, [url]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const refetch = async () => {\n    await fetchData();\n  };\n  return {\n    data,\n    loading,\n    error,\n    refetch\n  };\n};\n_s(useFetch, \"lD7nwgCuujJk8gjm/s3yo4AVZEs=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useCallback","axios","BASE_URL","useFetch","url","_s","data","setData","loading","setLoading","error","setError","console","log","fetchData","res","get","withCredentials","err","_err$response","_err$response$data","response","message","refetch"],"sources":["C:/Users/paswa/Mern stack/Mern-stack-hotel-booking-App/client/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:8800\"; // Hardcode for now to test\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  console.log(\"✅ Full API URL:\", `${BASE_URL}${url}`);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}${url}`, {\r\n        withCredentials: true,\r\n      });\r\n      setData(res.data);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || err.message || \"An error occurred\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const refetch = async () => {\r\n    await fetchData();\r\n  };\r\n\r\n  return { data, loading, error, refetch };\r\n};\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCa,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,GAAGX,QAAQ,GAAGE,GAAG,EAAE,CAAC;EAEnD,MAAMU,SAAS,GAAGd,WAAW,CAAC,YAAY;IACxCS,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,GAAGd,QAAQ,GAAGE,GAAG,EAAE,EAAE;QAC/Ca,eAAe,EAAE;MACnB,CAAC,CAAC;MACFV,OAAO,CAACQ,GAAG,CAACT,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOY,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZT,QAAQ,CAAC,EAAAQ,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcb,IAAI,cAAAc,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAIJ,GAAG,CAACI,OAAO,IAAI,mBAAmB,CAAC;IAC7E,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,GAAG,CAAC,CAAC;EAETN,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMT,SAAS,CAAC,CAAC;EACnB,CAAC;EAED,OAAO;IAAER,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEa;EAAQ,CAAC;AAC1C,CAAC;AAAClB,EAAA,CA9BIF,QAAQ;AAgCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}